"""rename_milling_cutters_to_geometry_frez

Revision ID: 4084fb1fe5d9
Revises: 8175dd6166f4
Create Date: 2025-06-22 17:11:01.650985

"""

from typing import Sequence, Union

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = '4084fb1fe5d9'
down_revision: Union[str, None] = '8175dd6166f4'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###

    # Создаем новую таблицу
    op.create_table(
        'geometry_milling_cutters',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('D', sa.Float(), nullable=True),
        sa.Column('L', sa.Float(), nullable=True),
        sa.Column('l', sa.Float(), nullable=True),
        sa.Column('d', sa.Float(), nullable=True),
        sa.Column('z', sa.Integer(), nullable=True),
        sa.Column('a_', sa.Float(), nullable=True),
        sa.Column('d_1_', sa.Float(), nullable=True),
        sa.Column('d_2_', sa.Float(), nullable=True),
        sa.Column('l_', sa.Float(), nullable=True),
        sa.Column('L_', sa.Float(), nullable=True),
        sa.Column('f_', sa.Float(), nullable=True),
        sa.Column('q_', sa.Float(), nullable=True),
        sa.Column('morse_taper', sa.String(length=50), nullable=True),
        sa.Column('execution', sa.String(length=100), nullable=True),
        sa.Column('fi_', sa.Float(), nullable=True),
        sa.Column('type_cutter_', sa.String(length=100), nullable=True),
        sa.Column('material', sa.String(length=100), nullable=True),
        sa.Column('type_of_cutting_part_', sa.String(length=100), nullable=True),
        sa.Column('group', sa.String(length=100), nullable=True),
        sa.Column('tool_type', sa.String(length=100), nullable=True),
        sa.Column('standard', sa.String(length=100), nullable=True),
        sa.Column('D_1', sa.Float(), nullable=True),
        sa.Column('f_additional_', sa.Float(), nullable=True),
        sa.Column('D_additional', sa.Float(), nullable=True),
        sa.Column('P', sa.Float(), nullable=True),
        sa.Column('l_nominal_', sa.Float(), nullable=True),
        sa.Column('d_', sa.Float(), nullable=True),
        sa.Column('d_additional_', sa.Float(), nullable=True),
        sa.Column('d_1_additional_', sa.Float(), nullable=True),
        sa.Column('direction', sa.String(length=100), nullable=True),
        sa.Column('B', sa.Float(), nullable=True),
        sa.Column('c_', sa.Float(), nullable=True),
        sa.Column('c_additional_', sa.Float(), nullable=True),
        sa.Column('h_', sa.Float(), nullable=True),
        sa.Column('R', sa.Float(), nullable=True),
        sa.Column('R_additional', sa.Float(), nullable=True),
        sa.Column('m_n0_', sa.Float(), nullable=True),
        sa.Column('L_additional', sa.Float(), nullable=True),
        sa.Column('K', sa.Float(), nullable=True),
        sa.Column('K_additional', sa.Float(), nullable=True),
        sa.Column('accuracy', sa.String(length=100), nullable=True),
        sa.Column('D_2', sa.Float(), nullable=True),
        sa.Column('l_1_', sa.Float(), nullable=True),
        sa.Column('f_deviation_', sa.Float(), nullable=True),
        sa.Column('g_', sa.Float(), nullable=True),
        sa.Column('g_deviation_', sa.Float(), nullable=True),
        sa.Column('zxd_xD', sa.String(length=100), nullable=True),
        sa.Column('z_0_', sa.Float(), nullable=True),
        sa.Column('series', sa.String(length=100), nullable=True),
        sa.Column('groove_accuracy', sa.String(length=100), nullable=True),
        sa.Column('m_0_', sa.Float(), nullable=True),
        sa.Column('subgroup', sa.String(length=100), nullable=True),
        sa.Column('h_additional_', sa.Float(), nullable=True),
        sa.Column('m_', sa.Float(), nullable=True),
        sa.Column('metric_shank', sa.String(length=100), nullable=True),
        sa.Column('b_', sa.Float(), nullable=True),
        sa.Column('S', sa.Float(), nullable=True),
        sa.Column('t_', sa.Float(), nullable=True),
        sa.Column('d_0_', sa.Float(), nullable=True),
        sa.Column('l_additional_', sa.Float(), nullable=True),
        sa.Column('omega_', sa.Float(), nullable=True),
        sa.Column('l_2_', sa.Float(), nullable=True),
        sa.Column('r_', sa.Float(), nullable=True),
        sa.Column('r_additional_', sa.Float(), nullable=True),
        sa.Column('B_additional', sa.Float(), nullable=True),
        sa.Column('H', sa.Float(), nullable=True),
        sa.Column('omega_u_', sa.Float(), nullable=True),
        sa.Column('D_deviation', sa.Float(), nullable=True),
        sa.Column('c_general_purpose_', sa.Float(), nullable=True),
        sa.Column('c_keyway_', sa.Float(), nullable=True),
        sa.Column('metric_taper', sa.String(length=100), nullable=True),
        sa.Column('alpha_', sa.Float(), nullable=True),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
        sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
        sa.ForeignKeyConstraint(
            ['id'],
            ['tools.id'],
        ),
        sa.PrimaryKeyConstraint('id'),
    )

    # Копируем данные из старой таблицы в новую
    op.execute(
        """
        INSERT INTO geometry_milling_cutters 
        SELECT * FROM milling_cutters
    """
    )

    # Создаем индекс для новой таблицы
    op.create_index(op.f('ix_geometry_milling_cutters_id'), 'geometry_milling_cutters', ['id'], unique=False)

    # Удаляем старую таблицу
    op.drop_index(op.f('ix_milling_cutters_id'), table_name='milling_cutters')
    op.drop_table('milling_cutters')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###

    # Создаем старую таблицу
    op.create_table(
        'milling_cutters',
        sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column('D', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column('L', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column('l', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column('d', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column('z', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('a_', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column('d_1_', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column('d_2_', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column('l_', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column('L_', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column('f_', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column('q_', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column('morse_taper', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
        sa.Column('execution', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
        sa.Column('fi_', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column('type_cutter_', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
        sa.Column('material', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
        sa.Column('type_of_cutting_part_', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
        sa.Column('group', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
        sa.Column('tool_type', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
        sa.Column('standard', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
        sa.Column('D_1', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column('f_additional_', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column('D_additional', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column('P', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column('l_nominal_', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column('d_', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column('d_additional_', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column('d_1_additional_', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column('direction', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
        sa.Column('B', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column('c_', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column('c_additional_', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column('h_', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column('R', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column('R_additional', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column('m_n0_', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column('L_additional', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column('K', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column('K_additional', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column('accuracy', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
        sa.Column('D_2', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column('l_1_', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column('f_deviation_', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column('g_', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column('g_deviation_', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column('zxd_xD', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
        sa.Column('z_0_', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column('series', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
        sa.Column('groove_accuracy', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
        sa.Column('m_0_', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column('subgroup', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
        sa.Column('h_additional_', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column('m_', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column('metric_shank', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
        sa.Column('b_', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column('S', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column('t_', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column('d_0_', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column('l_additional_', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column('omega_', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column('l_2_', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column('r_', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column('r_additional_', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column('B_additional', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column('H', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column('omega_u_', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column('D_deviation', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column('c_general_purpose_', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column('c_keyway_', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column('metric_taper', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
        sa.Column('alpha_', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
        sa.Column(
            'created_at',
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text('now()'),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            'updated_at',
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text('now()'),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(['id'], ['tools.id'], name=op.f('milling_cutters_id_fkey')),
        sa.PrimaryKeyConstraint('id', name=op.f('milling_cutters_pkey')),
    )

    # Копируем данные обратно
    op.execute(
        """
        INSERT INTO milling_cutters 
        SELECT * FROM geometry_milling_cutters
    """
    )

    # Создаем индекс для старой таблицы
    op.create_index(op.f('ix_milling_cutters_id'), 'milling_cutters', ['id'], unique=False)

    # Удаляем новую таблицу
    op.drop_index(op.f('ix_geometry_milling_cutters_id'), table_name='geometry_milling_cutters')
    op.drop_table('geometry_milling_cutters')
    # ### end Alembic commands ###
