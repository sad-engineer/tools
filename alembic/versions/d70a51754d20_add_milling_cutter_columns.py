"""add_milling_cutter_columns

Revision ID: d70a51754d20
Revises: a383d011ff66
Create Date: 2025-06-21 17:41:02.791493

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd70a51754d20'
down_revision: Union[str, None] = 'a383d011ff66'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('milling_cutters',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tool_id', sa.Integer(), nullable=False),
    sa.Column('D', sa.Float(), nullable=True),
    sa.Column('L', sa.Float(), nullable=True),
    sa.Column('l', sa.Float(), nullable=True),
    sa.Column('d', sa.Float(), nullable=True),
    sa.Column('z', sa.Integer(), nullable=True),
    sa.Column('a_', sa.Float(), nullable=True),
    sa.Column('d_1_', sa.Float(), nullable=True),
    sa.Column('d_2_', sa.Float(), nullable=True),
    sa.Column('l_', sa.Float(), nullable=True),
    sa.Column('L_', sa.Float(), nullable=True),
    sa.Column('f_', sa.Float(), nullable=True),
    sa.Column('q_', sa.Float(), nullable=True),
    sa.Column('morse_taper', sa.String(length=50), nullable=True),
    sa.Column('execution', sa.String(length=100), nullable=True),
    sa.Column('fi_', sa.Float(), nullable=True),
    sa.Column('type_cutter_', sa.String(length=100), nullable=True),
    sa.Column('material', sa.String(length=100), nullable=True),
    sa.Column('type_of_cutting_part_', sa.String(length=100), nullable=True),
    sa.Column('group', sa.String(length=100), nullable=True),
    sa.Column('tool_type', sa.String(length=100), nullable=True),
    sa.Column('standard', sa.String(length=100), nullable=True),
    sa.Column('D_1', sa.Float(), nullable=True),
    sa.Column('f_additional_', sa.Float(), nullable=True),
    sa.Column('D_additional', sa.Float(), nullable=True),
    sa.Column('P', sa.Float(), nullable=True),
    sa.Column('l_nominal_', sa.Float(), nullable=True),
    sa.Column('d_', sa.Float(), nullable=True),
    sa.Column('d_additional_', sa.Float(), nullable=True),
    sa.Column('d_1_additional_', sa.Float(), nullable=True),
    sa.Column('direction', sa.String(length=100), nullable=True),
    sa.Column('B', sa.Float(), nullable=True),
    sa.Column('c_', sa.Float(), nullable=True),
    sa.Column('c_additional_', sa.Float(), nullable=True),
    sa.Column('h_', sa.Float(), nullable=True),
    sa.Column('R', sa.Float(), nullable=True),
    sa.Column('R_additional', sa.Float(), nullable=True),
    sa.Column('m_n0_', sa.Float(), nullable=True),
    sa.Column('L_additional', sa.Float(), nullable=True),
    sa.Column('K', sa.Float(), nullable=True),
    sa.Column('K_additional', sa.Float(), nullable=True),
    sa.Column('accuracy', sa.String(length=100), nullable=True),
    sa.Column('D_2', sa.Float(), nullable=True),
    sa.Column('l_1_', sa.Float(), nullable=True),
    sa.Column('f_deviation_', sa.Float(), nullable=True),
    sa.Column('g_', sa.Float(), nullable=True),
    sa.Column('g_deviation_', sa.Float(), nullable=True),
    sa.Column('zxd_xD', sa.String(length=100), nullable=True),
    sa.Column('z_0_', sa.Float(), nullable=True),
    sa.Column('series', sa.String(length=100), nullable=True),
    sa.Column('groove_accuracy', sa.String(length=100), nullable=True),
    sa.Column('m_0_', sa.Float(), nullable=True),
    sa.Column('subgroup', sa.String(length=100), nullable=True),
    sa.Column('h_additional_', sa.Float(), nullable=True),
    sa.Column('m_', sa.Float(), nullable=True),
    sa.Column('metric_shank', sa.String(length=100), nullable=True),
    sa.Column('b_', sa.Float(), nullable=True),
    sa.Column('S', sa.Float(), nullable=True),
    sa.Column('t_', sa.Float(), nullable=True),
    sa.Column('d_0_', sa.Float(), nullable=True),
    sa.Column('l_additional_', sa.Float(), nullable=True),
    sa.Column('omega_', sa.Float(), nullable=True),
    sa.Column('l_2_', sa.Float(), nullable=True),
    sa.Column('r_', sa.Float(), nullable=True),
    sa.Column('r_additional_', sa.Float(), nullable=True),
    sa.Column('B_additional', sa.Float(), nullable=True),
    sa.Column('H', sa.Float(), nullable=True),
    sa.Column('omega_u_', sa.Float(), nullable=True),
    sa.Column('D_deviation', sa.Float(), nullable=True),
    sa.Column('c_general_purpose_', sa.Float(), nullable=True),
    sa.Column('c_keyway_', sa.Float(), nullable=True),
    sa.Column('metric_taper', sa.String(length=100), nullable=True),
    sa.Column('alpha_', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['tool_id'], ['tools.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_milling_cutters_id'), 'milling_cutters', ['id'], unique=False)
    op.create_index(op.f('ix_milling_cutters_tool_id'), 'milling_cutters', ['tool_id'], unique=True)
    op.alter_column('tools', 'marking',
               existing_type=sa.VARCHAR(),
               nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('tools', 'marking',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_index(op.f('ix_milling_cutters_tool_id'), table_name='milling_cutters')
    op.drop_index(op.f('ix_milling_cutters_id'), table_name='milling_cutters')
    op.drop_table('milling_cutters')
    # ### end Alembic commands ###
